import{T as e,O as c}from"./index.7d4bc839.js";import{f as i}from"./utils.409af791.js";const h=function(t){const a=new Map;a.set("hash",["Transaction Hash","A TxHash or transaction hash is a unique 66-character identifier that is generated whenever a transaction is executed."]),a.set("status",["Status","The status of the transaction."]),a.set("blockNumber",["Block","Number of the block in which the transaction is recorded. Block confirmations indicate how many blocks have been added since the transaction was mined."]),a.set("createTime",["Timestamp","The date and time at which a transaction is mined."]),a.set("createdTime",["Timestamp","The date and time at which a transaction is mined."]),a.set("from",["From","The sending party of the transaction."]),a.set("to",["To","The receiving party of the transaction (could be a contract address)."]),a.set("value",["Value","The value being transacted in Ether and fiat value. Note: You can click the fiat value (if available) to see historical value at the time of transaction."]),a.set("gas",["Transaction Fee","Amount paid to the miner for processing the transaction."]),a.set("gasPrice",["Gas Price","Cost per unit of gas specified for the transaction, in Ether and Gwei. The higher the gas price the higher chance of getting included in a block."]),a.set("gas",["Gas Limit & Usage by Txn",'Maximum amount of gas allocated for the transaction & the amount eventually used. Normal ETH transfers involve " + res.gasLimit + " gas units while contracts involve higher values.']),parseInt(t.baseFeePerGas)!==0&&a.set("maxPriorityFeePerGas",["Gas Fees","The amount eventually used."]),a.set("nonce",["Nonce","Sequential running number for an address, beginning with 0 for the first transaction. For example, if the nonce of a transaction is 10, it would be the 11th transaction sent from the senders address."]),a.set("tokensTransferred",["Tokens Transferred","List of tokens transferred in the transaction."]),a.set("input",["Input Data","Additional data included for this transaction. Commonly used as part of contract interaction or as a message sent to the recipient."]);const s=[];for(const[o,r]of a){let n=t[o];(n==null||n.length===0)&&o!=="to"||(o=="from"?n={from:t.from,fromCode:t.fromCode,fromName:t.fromName,fromSymbol:t.fromSymbol,fromContract:t.fromContract}:o=="to"?n={to:t.to,toCode:t.toCode,toName:t.toName,toSymbol:t.toSymbol,contractAddress:t.contractAddress,contractAddressName:t.contractAddressName,contractAddressSymbol:t.contractAddressSymbol,toContract:t.toContract}:o=="gas"?n={gas:i(BigInt(t.gas)),gasUsed:i(BigInt(t.gasUsed))}:o=="maxPriorityFeePerGas"?n={baseFeePerGas:t.baseFeePerGas,maxFeePerGas:t.maxFeePerGas,maxPriorityFeePerGas:t.maxPriorityFeePerGas}:o=="status"?n={status:t.status,errorMsg:t.errorReturn}:o=="input"&&(n={inputContent:t.input,methodName:t.methodName}),s.push(new c(o,r[0]+":",n,r[1])))}return s},l=[new e("Txn Hash","hash"),new e("Method","method"),new e("Block","blockNumber"),new e("Age","createTime"),new e("From","from"),new e("To","to"),new e("Value","value"),new e("Txn Fee","gas")],w=[new e("Txn Hash","transactionHash"),new e("Method","method"),new e("Block","blockNumber"),new e("Age","createdTime"),new e("From","from"),new e("To","to"),new e("Value","value"),new e("Token","contract")],u=[new e("Txn Hash","transactionHash"),new e("Method","method"),new e("Block","blockNumber"),new e("Age","createdTime"),new e("From","from"),new e("To","to"),new e("TokenID","tokenID"),new e("Token","contract")],f=[new e("Txn Hash","transactionHash"),new e("Method","method"),new e("Block","blockNumber"),new e("Age","createdTime"),new e("From","from"),new e("To","to"),new e("TokenID","tokenID"),new e("Quantity","value"),new e("Token","contract")],T=[new e("Parent Txn Hash","transactionHash"),new e("Block","blockNumber"),new e("Age","createdTime"),new e("From","from"),new e("To","to"),new e("Value","amount")],g=[new e("Txn Hash","transactionHash"),new e("Method","method"),new e("Block","blockNumber"),new e("Age","createdTime"),new e("From","from"),new e("To","to"),new e("Quantity","value")],b=[new e("Txn Hash","transactionHash"),new e("Method","method"),new e("Block","blockNumber"),new e("Age","createdTime"),new e("From","from"),new e("To","to"),new e("TokenID","tokenID")],k=[new e("Address","Address"),new e("Quantity","Quantity")];new e("Address","owner"),new e("token","tokenID");export{w as E,T as I,l as T,u as a,f as b,g as c,k as d,b as e,h as g};
