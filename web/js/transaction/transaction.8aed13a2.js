import{T as e,O as t}from"../index/index.9f3e1a29.js";import{f as a}from"../../assets/index.a746f986.js";const n=function(e){const n=new Map;n.set("hash",["Transaction Hash","A TxHash or transaction hash is a unique 66-character identifier that is generated whenever a transaction is executed."]),n.set("status",["Status","The status of the transaction."]),n.set("blockNumber",["Block","Number of the block in which the transaction is recorded. Block confirmations indicate how many blocks have been added since the transaction was mined."]),n.set("createTime",["Timestamp","The date and time at which a transaction is mined."]),n.set("createdTime",["Timestamp","The date and time at which a transaction is mined."]),n.set("from",["From","The sending party of the transaction."]),n.set("to",["To","The receiving party of the transaction (could be a contract address)."]),n.set("value",["Value","The value being transacted in Ether and fiat value. Note: You can click the fiat value (if available) to see historical value at the time of transaction."]),n.set("gas",["Transaction Fee","Amount paid to the miner for processing the transaction."]),n.set("gasPrice",["Gas Price","Cost per unit of gas specified for the transaction, in Ether and Gwei. The higher the gas price the higher chance of getting included in a block."]),n.set("gas",["Gas Limit & Usage by Txn",'Maximum amount of gas allocated for the transaction & the amount eventually used. Normal ETH transfers involve " + res.gasLimit + " gas units while contracts involve higher values.']),n.set("maxPriorityFeePerGas",["Gas Fees","The amount eventually used."]),n.set("tokensTransferred",["Tokens Transferred","List of tokens transferred in the transaction."]),n.set("input",["Input Data","Additional data included for this transaction. Commonly used as part of contract interaction or as a message sent to the recipient."]);const o=[];for(const[s,r]of n){let n=e[s];(null!=n&&0!==n.length||"to"===s)&&("from"==s?n={from:e.from,fromCode:e.fromCode,fromName:e.fromName,fromSymbol:e.fromSymbol,fromContract:e.fromContract}:"to"==s?n={to:e.to,toCode:e.toCode,toName:e.toName,toSymbol:e.toSymbol,contractAddress:e.contractAddress,contractAddressName:e.contractAddressName,contractAddressSymbol:e.contractAddressSymbol,toContract:e.toContract}:"gas"==s?n={gasLimit:a(BigInt(e.gasLimit)),gasUsed:a(BigInt(e.gasUsed)),percent:Math.round(e.gasUsed/e.gasLimit*1e4)/100+"%"}:"maxPriorityFeePerGas"==s?n={baseFeePerGas:e.baseFeePerGas,maxFeePerGas:e.maxFeePerGas,maxPriorityFeePerGas:e.maxPriorityFeePerGas}:"status"==s?n={status:e.status,errorMsg:e.errorReturn}:"input"==s&&(n={inputContent:e.input,methodName:e.methodName}),o.push(new t(s,r[0]+":",n,r[1])))}return o},o=[new e("Txn Hash","hash"),new e("Method","method"),new e("Block","blockNumber"),new e("Age","createTime"),new e("From","from"),new e("To","to"),new e("Value","value"),new e("Txn Fee","gas")],s=[new e("Txn Hash","transactionHash"),new e("Method","method"),new e("Block","blockNumber"),new e("Age","createdTime"),new e("From","from"),new e("To","to"),new e("Value(token)","value"),new e("Token","contract")],r=[new e("Txn Hash","transactionHash"),new e("Method","method"),new e("Block","blockNumber"),new e("Age","createdTime"),new e("From","from"),new e("To","to"),new e("TokenID","tokenID")],i=[new e("Parent Txn Hash","transactionHash"),new e("Block","blockNumber"),new e("Age","createdTime"),new e("From","from"),new e("To","to"),new e("Value","amount")],c=[new e("Txn Hash","transactionHash"),new e("Method","method"),new e("Block","blockNumber"),new e("Age","createdTime"),new e("From","from"),new e("To","to"),new e("Quantity","value")],m=[new e("Txn Hash","transactionHash"),new e("Method","method"),new e("Block","blockNumber"),new e("Age","createdTime"),new e("From","from"),new e("To","to"),new e("TokenID","tokenID")],d=[new e("Address","owner"),new e("Quantity","quantity")],h=[new e("Address","owner"),new e("token","tokenID")];export{s as E,i as I,o as T,r as a,c as b,d as c,m as d,h as e,n as g};
