import{r as e,f as t}from"../../assets/index.ce741f41.js";import{T as a,O as s}from"../index/index.9f3e1a29.js";const n=function(t,a,s){let n="/blocks?offset="+a*s+"&limit="+s;return t&&(n+="&allView=true"),e({url:n,method:"get"})},i=function(t){return e({url:"/blocks/"+t,method:"get"})},o=function(e){const a=new Map;a.set("number",["Block Height","Also known as Block Number. The block height, which indicates the length of the blockchain, increases after the addition of the new block."]),a.set("timestamp",["Timestamp","The date and time at which a block is mined."]),a.set("transactionsTotal",["Transactions","The number of transactions in the block. Internal transaction is transactions as a result of contract execution that involves Ether value."]),a.set("miner",["Mined by","Miner who successfully include the block onto the blockchain."]),a.set("difficulty",["Difficulty","The amount of effort required to mine a new block. The difficulty algorithm may adjust according to time."]),a.set("totalDifficulty",["Total Difficulty","Total difficulty of the chain until this block."]),a.set("size",["Size","The block size is actually determined by the block gas limit."]),a.set("gasUsed",["Gas Used","The total gas used in the block and its percentage of gas filled in the block."]),a.set("gasLimit",["Gas Limit","Total gas limit provided by all transactions in the block."]),a.set("extraData",["Extra Data","Any data that can be included by the miner in the block."]),a.set("hash",["Hash","The hash of the block header of the current block."]),a.set("parentHash",["Parent Hash","The hash of the block from which this block was generated, also known as its parent block."]),a.set("sha3Uncles",["Sha3Uncles","The mechanism which Ethereum Javascript RLP encodes an empty string."]),a.set("stateRoot",["StateRoot","The root of the state trie."]),a.set("nonce",["Nonce","Block nonce is a value used during mining to demonstrate proof of work for a block."]);const n=[];for(const[i,o]of a){let a=e[i];"number"==i?a=parseInt(a).toString():"difficulty"==i||"totalDifficulty"==i?a=t(BigInt(parseInt(a))):"size"==i?a=t(parseInt(a))+" bytes":("gasUsed"==i||"gasLimit"==i)&&(a=t(parseInt(a))),n.push(new s(i,o[0]+":",a,o[1]))}return n},c=[new a("Block","number"),new a("Age","timestamp"),new a("Txn","transactionsTotal"),new a("Miner","miner"),new a("Gas Used","gasUsed"),new a("Gas Limit","gasLimit"),new a("Base Fee","baseFeePerGas")];export{c as B,i as G,n as a,o as g};
